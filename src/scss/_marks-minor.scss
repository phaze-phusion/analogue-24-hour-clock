@use 'sass:math';
@use 'options';

.mark-minor {
  --mark-height-next-gradient-stop: calc(var(--mark-minor-height) * 1.1); // prevents the jagged edges on the marks' inner sides
  --overlap-adjustment: calc(var(--mark-minor-height) * 0.08); // prevent gap between face-border and mark
  --color: var(--mark-minor-color, var(--face-border-color));
  box-sizing: border-box;
  width: var(--mark-minor-width);
  height: calc(50% + var(--overlap-adjustment));
  // first stop isn't needed but without it WebStorm loses it's mind
  background: linear-gradient(var(--color) 0%, var(--color) var(--mark-minor-height), transparent var(--mark-height-next-gradient-stop));
  top: calc(var(--overlap-adjustment) / -2);
  left: calc(50% - var(--mark-minor-width) / 2);
  position: absolute;
  transform-origin: center bottom;
}

$count: 60;
$degrees: math.div(360, $count); // 360 degrees divided by 60 = 6

@for $i from 1 through $count {
  #mark-minor-#{$i}.mark-minor {
    // rotate the tick mark
    transform: rotate(#{$degrees * $i}deg);
  }
}